NAME = D3
BUILD_DIR ?= ./BUILD-$(NAME)
TMP_DIR ?= ./TMP-$(NAME)
SRC_DIRS ?= ./src
DOCS_DIR ?= ./docs
FILES_DIR ?= ./dist
RELEASE_DIR ?= ./RELEASE-$(NAME)
INSTALL_BASE ?= /Volumes/devnext
INSTALL_DIR ?= $(INSTALL_BASE)/$(NAME)

Z88DK_CRT = 30

#DEBUGFLAGS := --list --c-code-in-asm

CC=zcc
CCFLAGS=+zxn -vn -O3 -startup=$(Z88DK_CRT) -clib=new -pragma-include:zpragma.inc
CZFLAGS=-Cz="--clean --fullsize --main-fence 0xC000"
LDFLAGS=-m -lm
INCFLAGS=

SH := /bin/sh
ECHO := @/bin/echo -n
CD := cd
RSYNC := rsync -parv
MKDIR := mkdir -p
RM := rm -rfv
LSH := ls -larth
CP := @cp -rv
MV := @mv -v
#FIGLET := echo
FIGLET := `which figlet`
CAT := @`which cat`
SED := @`which sed`
LS := ls -l@k
VERSION := `cat VERSION`
DATE := `which date`

default: q_inkey

all: ini every untar ch8show

clean:
	$(RM) $(BUILD_DIR)
	$(RM) $(TMP_DIR)
	$(RM) $(NAME).map
	$(RM) $(NAME)_*.bin
	$(RM) cmake-build-debug
	$(RM) *.map
	$(RM) *_MAIN.bin
	$(RM) *_CODE.bin
	$(RM) *_UNASSIGNED.bin
	$(RM) *_UNASSIGNED.bin

rel-clean: clean
	$(RM) $(RELEASE_DIR)

deps: incs
	$(ECHO) $(NAME) > NAME

dirs:
	$(MKDIR) $(BUILD_DIR)
	$(MKDIR) $(TMP_DIR)
	$(MKDIR) $(RELEASE_DIR)

incs: dirs
	$(ECHO) `git shortlog -s -n| grep Rimron| cut -b-7|sed -e 's/^[[:space:]]*//'` > $(TMP_DIR)/BUILD
	$(ECHO) "#" > $(TMP_DIR)/BANNER
	$(CAT) $(TMP_DIR)/BUILD >> $(TMP_DIR)/BANNER
	$(ECHO) " RUNNING" >> $(TMP_DIR)/BANNER
	$(CAT)  $(TMP_DIR)/BANNER | $(FIGLET)

	cat templates/build_top.h > src/common/build.h

	$(ECHO) "// Autogenerated on " >>  src/common/build.h
	$(DATE) >>  src/common/build.h

	cat templates/build_build.h >> src/common/build.h
	$(CAT) $(TMP_DIR)/BUILD >> src/common/build.h
	echo "\"" >> src/common/build.h

	cat templates/build_ver.h >> src/common/build.h
	$(CAT) VERSION >> src/common/build.h
	echo "\"" >> src/common/build.h

	cat templates/build_bottom.h >> src/common/build.h

	$(CAT) VERSION > $(TMP_DIR)/BANNER
	$(ECHO) " done!" >> $(TMP_DIR)/BANNER
	$(CAT) $(TMP_DIR)/BANNER | figlet

release: ini every untar ch8show inkey less
	$(CP) $(BUILD_DIR)/INI.DOT $(RELEASE_DIR)/INI
	$(CP) $(BUILD_DIR)/EVERY.DOT $(RELEASE_DIR)/EVERY
	$(CP) $(BUILD_DIR)/UNTAR.DOT $(RELEASE_DIR)/UNTAR
	$(CP) $(BUILD_DIR)/CH8SHOW.DOT $(RELEASE_DIR)/CH8SHOW
	$(CP) $(BUILD_DIR)/INKEY.DOT $(RELEASE_DIR)/INKEY
	$(CP) $(BUILD_DIR)/LESS.DOT $(RELEASE_DIR)/LESS

uninstall: uninstall_every uninstall_ini uninstall_untar uninstall_ch8show uninstall_inkey uninstall_less


#
# INI
#
ini: deps dirs
	$(CC) $(CCFLAGS) $(LDFLAGS) @src/ini.lst -oINI -create-app \
		-subtype=dotn $(CZFLAGS)
	$(MV) INI $(BUILD_DIR)/INI.DOT

install_ini:
	$(CP) $(BUILD_DIR)/INI.DOT $(INSTALL_BASE)/dot/INI

q_ini: ini install_ini

uninstall_ini:
	$(RM) $(INSTALL_BASE)/dot/INI


#
# EVERY
#
every: deps dirs
	$(CC) $(CCFLAGS) $(LDFLAGS) @src/every.lst -oEVERY -create-app \
		-subtype=dotn $(CZFLAGS)
	$(MV) EVERY $(BUILD_DIR)/EVERY.DOT

install_every:
	$(CP) $(BUILD_DIR)/EVERY.DOT $(INSTALL_BASE)/dot/EVERY

q_every: every install_every

uninstall_every:
	$(RM) $(INSTALL_BASE)/dot/EVERY


#
# UNTAR
#
untar: deps dirs
	$(CC) $(CCFLAGS) $(LDFLAGS) @src/untar.lst -oUNTAR -create-app \
		-subtype=dotn $(CZFLAGS)
	$(MV) UNTAR $(BUILD_DIR)/UNTAR.DOT

install_untar:
	$(CP) $(BUILD_DIR)/UNTAR.DOT $(INSTALL_BASE)/dot/UNTAR

q_untar: untar install_untar

uninstall_untar:
	$(RM) $(INSTALL_BASE)/dot/UNTAR


#
# CH8SHOW
#
ch8show: deps dirs
	$(CC) $(CCFLAGS) $(LDFLAGS) @src/ch8show.lst -oCH8SHOW -create-app \
		-subtype=dotn $(CZFLAGS)
	$(MV) CH8SHOW $(BUILD_DIR)/CH8SHOW.DOT

install_ch8show:
	$(CP) $(BUILD_DIR)/CH8SHOW.DOT $(INSTALL_BASE)/dot/CH8SHOW

q_ch8show: ch8show install_ch8show

uninstall_ch8show:
	$(RM) $(INSTALL_BASE)/dot/CH8SHOW

#
# INKEY
#
inkey: deps dirs
	$(CC) $(CCFLAGS) $(LDFLAGS) @src/inkey.lst -oINKEY -create-app \
		-subtype=dotn $(CZFLAGS)
	$(MV) INKEY $(BUILD_DIR)/INKEY.DOT

install_inkey:
	$(CP) $(BUILD_DIR)/INKEY.DOT $(INSTALL_BASE)/dot/INKEY

q_inkey: inkey install_inkey

uninstall_inkey:
	$(RM) $(INSTALL_BASE)/dot/INKEY
#
# LESS
#
less:
	$(CC) $(CCFLAGS) $(LDFLAGS) @src/less.lst -oLESS -create-app \
		-subtype=dotn $(CZFLAGS)
	$(MV) LESS $(BUILD_DIR)/LESS.DOT

install_less:
	$(CP) $(BUILD_DIR)/LESS.DOT $(INSTALL_BASE)/dot/LESS

q_less: less install_less

uninstall_less:
	$(RM) $(INSTALL_BASE)/dot/LESS


